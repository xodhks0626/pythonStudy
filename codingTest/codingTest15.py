import time

# 정수 x가 주어질 때,
# x가 5로 나누어떨어지면, 5로 나눈다.
# x가 3으로 나누어떨이지면, 3으로 나눈다.
# x가 2로 나누어떨어지면, 2로 나눈다.
# x에서 1을 뺀다.
# 연산 4개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값 출력
# ex. x = 26 -> 26 - 1 = 25 -> 25 / 5 = 5 -> 5 / 5 = 1

print("정수 x값 입력 (1 <= x <= 30,000) :")
x = int(input())

# 시간 측정
start = time.time()

# 피보나치 수열 처럼 DP 테이블 초기화
d = [0] * 30001

# x = 1인 경우, 더 이상 할 게 없으므로 0으로 설정
d[1] = 0

# 2부터 시작하게 한다. (보텀업 방식)
for i in range(2, x + 1):
    # 횟수를 무조건 뺄셈을 통해서만 1을 만드는 횟수를 저장하게 한다.
    # 예를 들어, 5는 무조건 뺄셈을 통해서 1을 만들게 되면 4번이 걸리므로 이를 저장해놓는다.
    d[i] = d[i - 1] + 1
    # 만약, 5로 나누어떨어지면 위에서 설정한 횟수와 나눈 몫에서의 횟수에 한 번을 추가한 값을 비교하여 재설정하게 된다.
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)
    elif i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)
    elif i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
    # 만약, 7과 같이 2,3,5 어느 곳에서도 걸리지 않는 정수는 한번 뺄셈을 한 값(6)에서의 값에 한 횟수를 더한 것과 같다.

print(d[x])

# 걸린시간 출력
print("Time : ", time.time() - start)
